PROCEDURE "CARE"."PKG_CARE.PKG_PROCEDURE::CARE_PREDICT_REG_PROC" (IN ACCOUNT_NUMBER_ACN NVARCHAR(12) ,
    IN JURISDICTION_NAME NVARCHAR(10),
    IN CHANNEL_NAME NVARCHAR(10),
    IN SYSTEM_SOURCE_CD NVARCHAR(10),
     IN V_BULB_ELG "CARE"."PKG_CARE.PKG_TABLE_TYPE::ZCARE_CDP_LED_INPUT",
    OUT V_OUT_OFR "CARE"."PKG_CARE.PKG_TABLE_TYPE::ZCARE_OFFER_OUTPUT")
   LANGUAGE SQLSCRIPT
    AS
BEGIN 
   /*************************************
       Write your procedure logic 
   *************************************/
   
DECLARE V_MAX_TIME_IVR TIMESTAMP;
DECLARE COUNT_AFTER_FINAL_RANK INTEGER; 
DECLARE CHANNEL_ID INTEGER;
DECLARE OWNER_RENTER_HEADER_LEVEL NVARCHAR(2);
DECLARE check_anr INTEGER;
DECLARE LED_NAME NVARCHAR(1000);
DECLARE V_GA_MAX_TIME TIMESTAMP;
DECLARE SOURCE_ACCOUNT_ID1 NVARCHAR(10);
DECLARE SOURCE_ACCOUNT_ID2 NVARCHAR(2);
DECLARE count_ocb INTEGER;
--DECLARE SYSTEM_SOURCE_CD NVARCHAR(10);
DECLARE OUTAGE_CHECK INTEGER;
DECLARE Total_Sum_GAIVR INTEGER;
DECLARE CHECK__RECOM INTEGER;
DECLARE mask_juris INTEGER;
DECLARE mask_LOB INTEGER;
DECLARE mask_product INTEGER; 
DECLARE MAX_LR_TIME TIMESTAMP;
DECLARE JURISDICTION NVARCHAR(10);
DECLARE JURISDICTION_ID INTEGER;
DECLARE LOW_PROB_SCORE_THRESHOLD DOUBLE;
DECLARE CHECK_GAIVR INTEGER;
DECLARE MAX_SCORE DOUBLE;
DECLARE CHECK_ID_ANR INTEGER;
DECLARE ACCOUNT_ID INTEGER;
DECLARE CUSTOMER_NEW_ACCOUNT_FLAG INTEGER;
DECLARE V_WEIGHTAGE_OUT TABLE("Account_Id" INTEGER, "Product_Id" INTEGER, "Score" DOUBLE);
DECLARE PREDICTION_ANR_COUNT INTEGER;
DECLARE LED_CHECK INTEGER;
DECLARE TRAINING_MODEL NVARCHAR(1);
DECLARE MAX_ACTION_RANK INTEGER;
DECLARE DEFAULT_OFFERING_FLAG INTEGER;
DECLARE JURISDICTION_NAME_CRM NVARCHAR(12) DEFAULT  :JURISDICTION_NAME;
DECLARE ACCOUNT_NUMBER BIGINT;
DECLARE V_ACN_OUTPUT TABLE("Account_Id" INTEGER,"ACCT_NUM" VARCHAR, "Action_Id" INTEGER,"Action_Description" VARCHAR(100));
DECLARE  V_REMOVE_PROD TABLE ("Product_Id" INTEGER);
DECLARE V_MR_OUT TABLE ("Product_Id" INTEGER , "Value" DOUBLE);
DECLARE V_INACTIVE_CHECK INTEGER;
DECLARE V_NON_RES_CHECK INTEGER;

select "Channel_Id" into CHANNEL_ID from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZCHANNEL_MASTER"
where "Channel_Name" = :CHANNEL_NAME;

ZCARE_MAP_PRODUCT = select * from "CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_MAP_PRODUCT";

select CASE WHEN :JURISDICTION_NAME = 'DEC' THEN 'DEC-NC' WHEN :JURISDICTION_NAME = 'DEP' THEN 'DEP-NC'
WHEN :JURISDICTION_NAME = 'DEMW' THEN 'DEO' 
ELSE :JURISDICTION_NAME END as "Juridiction_Name" into JURISDICTION_NAME from dummy;

select "Jurisdiction_Id" into JURISDICTION_ID from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZJURISDICTION_MASTER"
where "Jurisdiction_Name" = :JURISDICTION_NAME;

V_METRIC_VALUE = select "Group_Id","Channel_Id","Jurisdiction_Id","Value" from (
                select * , row_number() over (Partition by "Group_Id","Channel_Id","Jurisdiction_Id" order by "TimeStamp" DESC) as "RN"
                from "CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_METRIC_VALUE" where "Channel_Id" = :CHANNEL_ID and 
                "Jurisdiction_Id"= :JURISDICTION_ID) where "RN"=1;


If :ACCOUNT_NUMBER_ACN = '' THEN 

V_OUT =  select :ACCOUNT_NUMBER as "ACCOUNT_NUMBER", :SYSTEM_SOURCE_CD as "SOURCE_SYSTEM_CD","Regulated" as "REGULATED",'O' as "OWNER_RENTER_HEADER_LEVEL",
         a."Sub_Group_Id" as "PRODUCT_ID","Lookup_Value" as "COMMERCE_PRODUCT_ID","Sub_Group_Name" as "PRODUCT_NAME",
                                null as "PRODUCT_PRICE_INFORMATION",null as "PRODUCT_HINTS_AND_REMINDERS",a."Owner_Renter_Product_Level" as "OWNER_RENTER_PRODUCT_LEVEL"
          , '1' as "SCORE",null as "ACCEPT_REFERRED_FLAG","Line_Of_Business" as "LINE_OF_BUSINESS",null as "INSTALLATION_FEE",'O' as "ELIGIBLE_FLAG",
                                  RANK() OVER (Partition by "Regulated" ORDER BY c."Value" DESC) as  "RANK", null as "Upgrade_Downgrade_Flag" from 
                                  :ZCARE_MAP_PRODUCT  a
                                  LEFT OUTER JOIN 
                                  :V_METRIC_VALUE c
                                  on a."Sub_Group_Id" = c."Group_Id"
                                   where a."Default_Program_Flag" = '1';
                                    

                                  
ELSE


select  :ACCOUNT_NUMBER_ACN into "ACCOUNT_NUMBER" from dummy;
        


/******************************************
CHECK IF WE HAVE CUSTOMER DETAILS IN DATABASE
*******************************************/


select count(*) into check_id_anr from "CARE"."PKG_CARE.PKG_TABLES.PKG_ANALYTICAL_RECORD::ZCARE_ACCT_NUM_ID_RELATIONSHIP"
where "Account_Number" = :ACCOUNT_NUMBER
and "Source_System_Cd" = :SYSTEM_SOURCE_CD;

if check_id_anr = '0'



THEN 


/***********************************************************************
CONDITION FOR CUSTOMER NOT IN ANALYTICAL RECORD
***********************************************************************/

CALL "CARE"."PKG_CARE.PKG_PROCEDURE::CARE_RT_CHECK_BRE_RULES_PROC"(:ACCOUNT_NUMBER_ACN,:SYSTEM_SOURCE_CD,null,V_REMOVE_PROD);

V_OUT =  select :ACCOUNT_NUMBER as "ACCOUNT_NUMBER", :SYSTEM_SOURCE_CD as "SOURCE_SYSTEM_CD","Regulated" as "REGULATED",'O' as "OWNER_RENTER_HEADER_LEVEL",
         a."Sub_Group_Id" as "PRODUCT_ID","Lookup_Value" as "COMMERCE_PRODUCT_ID","Sub_Group_Name" as "PRODUCT_NAME",
                                null as "PRODUCT_PRICE_INFORMATION",null as "PRODUCT_HINTS_AND_REMINDERS",a."Owner_Renter_Product_Level" as "OWNER_RENTER_PRODUCT_LEVEL"
          , '1' as "SCORE",null as "ACCEPT_REFERRED_FLAG","Line_Of_Business" as "LINE_OF_BUSINESS",null as "INSTALLATION_FEE",'O' as "ELIGIBLE_FLAG",
                                  RANK() OVER (Partition by "Regulated" ORDER BY c."Value" DESC) as  "RANK", null as "Upgrade_Downgrade_Flag" from 
                                  :ZCARE_MAP_PRODUCT  a
                                  LEFT OUTER JOIN 
                                  :V_METRIC_VALUE c
                                  on a."Sub_Group_Id" = c."Group_Id"
                         where a."Default_Program_Flag" = '1' and a."Sub_Group_Id" NOT IN (select "Product_Id" from :V_REMOVE_PROD)
                         and "Regulated"=1;
 
 V_OVERALL_ELIGIBLE = 
                 select "ACCOUNT_NUMBER",  "SOURCE_SYSTEM_CD", "REGULATED",
                                "OWNER_RENTER_HEADER_LEVEL","PRODUCT_ID", "COMMERCE_PRODUCT_ID","PRODUCT_NAME",
                                "PRODUCT_PRICE_INFORMATION","PRODUCT_HINTS_AND_REMINDERS","OWNER_RENTER_PRODUCT_LEVEL"
                , '1' as "SCORE","ACCEPT_REFERRED_FLAG","LINE_OF_BUSINESS","INSTALLATION_FEE",'X' as "ELIGIBLE_FLAG",'1' as  "RANK", null as "Upgrade_Downgrade_Flag" from :V_OUT where "REGULATED"='1';
                 

                 
 select '1' into DEFAULT_OFFERING_FLAG from dummy;  
 
 
 ELSE 

select count(*) into check_anr from "CARE"."PKG_CARE.PKG_TABLES.PKG_ANALYTICAL_RECORD::ZCARE_PREDICTION_ANALYTICAL_RECORD"
where "Account_Number" = :ACCOUNT_NUMBER
and "Source_System_Cd" = :SYSTEM_SOURCE_CD;

V_RELATION_TABLE = select * from "CARE"."PKG_CARE.PKG_TABLES.PKG_ANALYTICAL_RECORD::ZCARE_ACCT_NUM_ID_RELATIONSHIP" where "Account_Number"= :ACCOUNT_NUMBER  
                    and "Source_System_Cd" = :SYSTEM_SOURCE_CD;

select "Account_Id" into ACCOUNT_ID from :V_RELATION_TABLE;


select "Source_Account_Id1" into SOURCE_ACCOUNT_ID1 from  :V_RELATION_TABLE;

select "Source_Account_Id2_String" into SOURCE_ACCOUNT_ID2 from  :V_RELATION_TABLE;

select "Jurisdiction" into JURISDICTION from  :V_RELATION_TABLE;


select count(*) into V_INACTIVE_CHECK from  :V_RELATION_TABLE where  "Account_Status_Cd" NOT IN (select "Config_Value_String" from "CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_MODEL_CONFIGURATION"
where "Configuration_Name"= 'ACTIVE_CUSTOMERS_STATUS_CODE'); 

select count(*) into V_NON_RES_CHECK from  :V_RELATION_TABLE where "Account_Condition_Nm" = 'NON-RESIDENTIAL';

select "Jurisdiction_Id" into JURISDICTION_ID from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZJURISDICTION_MASTER" where "Jurisdiction_Name" IN 
(select "Jurisdiction" from :V_RELATION_TABLE);

V_METRIC_VALUE = select "Group_Id","Channel_Id","Jurisdiction_Id","Value" from (
                select * , row_number() over (Partition by "Group_Id","Channel_Id","Jurisdiction_Id" order by "TimeStamp" DESC) as "RN"
                from "CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_METRIC_VALUE" where "Channel_Id" = :CHANNEL_ID and 
                "Jurisdiction_Id"= :JURISDICTION_ID);


/***************************************
CHECK NON RESIDENTIAL and INACTIVE ACCOUNT
*****************************************/
				
If :V_NON_RES_CHECK > 0 OR :V_INACTIVE_CHECK > 0  THEN 


V_OUT =  select :ACCOUNT_NUMBER as "ACCOUNT_NUMBER", :SYSTEM_SOURCE_CD as "SOURCE_SYSTEM_CD","Regulated" as "REGULATED",'O' as "OWNER_RENTER_HEADER_LEVEL",
         a."Sub_Group_Id" as "PRODUCT_ID","Lookup_Value" as "COMMERCE_PRODUCT_ID","Sub_Group_Name" as "PRODUCT_NAME",
                                null as "PRODUCT_PRICE_INFORMATION",null as "PRODUCT_HINTS_AND_REMINDERS",a."Owner_Renter_Product_Level" as "OWNER_RENTER_PRODUCT_LEVEL"
          , '1' as "SCORE",null as "ACCEPT_REFERRED_FLAG","Line_Of_Business" as "LINE_OF_BUSINESS",null as "INSTALLATION_FEE",'O' as "ELIGIBLE_FLAG",
                                  RANK() OVER (Partition by "Regulated" ORDER BY c."Value" DESC) as  "RANK", null as "Upgrade_Downgrade_Flag" from 
                                  :ZCARE_MAP_PRODUCT  a
                                  LEFT OUTER JOIN 
                                  :V_METRIC_VALUE c
                                  on a."Sub_Group_Id" = c."Group_Id"
                         where a."Default_Program_Flag" = '1' and a."Sub_Group_Id" NOT IN (select "Product_Id" from :V_REMOVE_PROD)
                         and "Regulated"=1;
 
 V_OVERALL_ELIGIBLE = 
                 select "ACCOUNT_NUMBER",  "SOURCE_SYSTEM_CD", "REGULATED",
                                "OWNER_RENTER_HEADER_LEVEL","PRODUCT_ID", "COMMERCE_PRODUCT_ID","PRODUCT_NAME",
                                "PRODUCT_PRICE_INFORMATION","PRODUCT_HINTS_AND_REMINDERS","OWNER_RENTER_PRODUCT_LEVEL"
                , '1' as "SCORE","ACCEPT_REFERRED_FLAG","LINE_OF_BUSINESS","INSTALLATION_FEE",'X' as "ELIGIBLE_FLAG",'1' as  "RANK", null as "Upgrade_Downgrade_Flag" from :V_OUT where "REGULATED"='1';
                 
ELSE 

select count(*) into LED_CHECK from :V_BULB_ELG where "ELIGIBILITY_CODE"
IN (select "Config_Value_String" from "CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_MODEL_CONFIGURATION"
where "Configuration_Name"= 'LED_ELIGIBILITY_CODE');

V_CHANNEL_JURIS = select a."Product_Id" from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPRODUCT_JURISDICTION" as a 
                    inner join "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPRODUCT_MASTER" as b on 
                    a."Product_Id" = b."Product_Id"
                    and b."Product_Status" = 'Active'
                    and a."Channel_Id" = :CHANNEL_ID and a."Jurisdiction_Id" = :JURISDICTION_ID;

IF :LED_CHECK > 0 THEN

select 'Free LED  Max_Unit:' || "MAX_BULB" || ' Min_Unit: ' || "MIN_BULB" into LED_NAME from :V_BULB_ELG;
                 
V_LED_CHECK =  select :ACCOUNT_ID as "Account_Id", "Product_Id",a."Sub_Group_Name",b."Line_Of_Business",b."Owner_Renter_Product_Level"
            from
            (select :ACCOUNT_ID as "Account_Id", '449' as "Product_Id", 
            :LED_NAME as "Sub_Group_Name"
             from :V_BULB_ELG ) a 
             LEFT OUTER JOIN
             :ZCARE_MAP_PRODUCT b
            on b."Sub_Group_Id" = a."Product_Id";
            

                                                                
V_ELG = select   "Account_Id",a."Product_Id","Sub_Group_Name","Line_Of_Business","Owner_Renter_Product_Level" from 
        (select "Account_Id","Product_Id","Sub_Group_Name","Line_Of_Business",b."Owner_Renter_Product_Level" from 
        (select "Account_Id","Product_Id" from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_ELIGIBILITY" where "Account_Id" = :ACCOUNT_ID) a
        LEFT OUTER JOIN
        :ZCARE_MAP_PRODUCT b
        on a."Product_Id" = b."Sub_Group_Id"
        UNION
        select * from :V_LED_CHECK) a
        INNER JOIN :V_CHANNEL_JURIS c on a."Product_Id" = c."Product_Id";
        
ELSE 

V_ELG = select  :ACCOUNT_ID as "Account_Id",a."Product_Id","Sub_Group_Name","Line_Of_Business",b."Owner_Renter_Product_Level" from 
        (select "Account_Id","Product_Id" from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_ELIGIBILITY" where "Account_Id" = :ACCOUNT_ID) a
        LEFT OUTER JOIN
        :ZCARE_MAP_PRODUCT b
        on a."Product_Id" = b."Sub_Group_Id"
        INNER JOIN
        :V_CHANNEL_JURIS c on a."Product_Id" = c."Product_Id";
        
END IF;

If :check_anr = '0' THEN 

/***********************************************************************
CONDITION FOR CUSTOMER NOT IN ANALYTICAL RECORD
***********************************************************************/

BEGIN
PARALLEL EXECUTION 

CALL "CARE"."PKG_CARE.PKG_PROCEDURE::CARE_ACTIONS_PROC"(:ACCOUNT_NUMBER_ACN,:SYSTEM_SOURCE_CD,:ACCOUNT_ID,:CHANNEL_ID,:JURISDICTION_ID,:SOURCE_ACCOUNT_ID1,:SOURCE_ACCOUNT_ID2,V_ACN_OUTPUT);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE::CARE_RT_CHECK_BRE_RULES_PROC"(:ACCOUNT_NUMBER_ACN,:SYSTEM_SOURCE_CD,:ACCOUNT_ID,V_REMOVE_PROD);

END;

V_OUT =  select :ACCOUNT_NUMBER as "ACCOUNT_NUMBER", :SYSTEM_SOURCE_CD as "SOURCE_SYSTEM_CD","Regulated" as "REGULATED",'O' as "OWNER_RENTER_HEADER_LEVEL",
         a."Sub_Group_Id" as "PRODUCT_ID","Lookup_Value" as "COMMERCE_PRODUCT_ID",a."Sub_Group_Name" as "PRODUCT_NAME",
                                null as "PRODUCT_PRICE_INFORMATION",null as "PRODUCT_HINTS_AND_REMINDERS",a."Owner_Renter_Product_Level" as "OWNER_RENTER_PRODUCT_LEVEL"
          , '1' as "SCORE",null as "ACCEPT_REFERRED_FLAG",a."Line_Of_Business" as "LINE_OF_BUSINESS",null as "INSTALLATION_FEE",'O' as "ELIGIBLE_FLAG",
                                  RANK() OVER (Partition by "Regulated" ORDER BY b."Value" DESC) as  "RANK", null as "Upgrade_Downgrade_Flag" from 
                                  :ZCARE_MAP_PRODUCT  a 
                                  INNER JOIN
                                  :V_ELG elg on a."Sub_Group_Id" = elg."Product_Id"
                                  LEFT OUTER JOIN
                                  :V_METRIC_VALUE b on a."Sub_Group_Id" = b."Group_Id"
                                  where a."Default_Program_Flag" = '1' and a."Sub_Group_Id" NOT IN (select "Product_Id" from :V_REMOVE_PROD)
																							and a."Sub_Group_Id" NOT IN (select "Product_Id" 
																							from "CARE"."PKG_CARE.PKG_TABLES.PKG_ANALYTICAL_RECORD::ZCARE_PRED_PRODUCT_PARTICIPATION"
																							where "Account_Id" = :ACCOUNT_ID)
                         and "Regulated"=1;
                                  
V_OVERALL_ELIGIBLE = select :ACCOUNT_NUMBER as "ACCOUNT_NUMBER", :SYSTEM_SOURCE_CD as "SOURCE_SYSTEM_CD",'1' as "REGULATED",
                                                                                :OWNER_RENTER_HEADER_LEVEL as "OWNER_RENTER_HEADER_LEVEL", "Product_Id" as "PRODUCT_ID",'NA' as "COMMERCE_PRODUCT_ID",
                                                                                "Sub_Group_Name" as "PRODUCT_NAME",'NA' as  "PRODUCT_PRICE_INFORMATION",
                                                                                'NA' as "PRODUCT_HINTS_AND_REMINDERS","Owner_Renter_Product_Level" as "OWNER_RENTER_PRODUCT_LEVEL"
                                                                                , '1' as "SCORE",'NA' as "ACCEPT_REFERRED_FLAG","Line_Of_Business" as "LINE_OF_BUSINESS",
                                                                                'NA' as "INSTALLATION_FEE",'X' as "ELIGIBLE_FLAG",'1' as "RANK", null as "Upgrade_Downgrade_Flag" from :V_ELG a ;
                
select '2' into DEFAULT_OFFERING_FLAG from dummy;  
 
 
 ELSE 
 
 select "Owner_Renter_DW" into OWNER_RENTER_HEADER_LEVEL from "CARE"."PKG_CARE.PKG_TABLES.PKG_ANALYTICAL_RECORD::ZCARE_PREDICTION_ANALYTICAL_RECORD"
where "Account_Id" =  :ACCOUNT_ID;



/********************************************************************************************************************************
CHECK FOR CURRENT OUTAGE BASED ON ACCOUNT
*********************************************************************************************************************************/

V_OUTAGE_CHECK = SELECT TOP 1
				OMS_EVT_TS,			
				NOTIF_TY_CD 
			FROM OCB.OUTAGE_EVENT_NOTIFICATION 
			where "SRC_ACCT_ID" = :SOURCE_ACCOUNT_ID1 
			and  "SRC_ACCT_ID2" = :SOURCE_ACCOUNT_ID2
		and SRC_ACCT_SYS_CD = :SYSTEM_SOURCE_CD
			AND NOTIF_TY_CD IN ('ITR', 'Proactive ITR', 'RESTORE')
			AND OMS_EVT_TS <= now()
			ORDER BY OMS_EVT_TS DESC;

select count(*) into OUTAGE_CHECK from :V_OUTAGE_CHECK where NOTIF_TY_CD != 'RESTORE' and OMS_EVT_TS >= 
        ADD_DAYS(now(),(select "Config_Value_Double" from  "CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCIP_MODEL_CONFIGURATION"
            where "Configuration_Name" = 'CIP_OUTAGE_THRESHOLD'));

if :OUTAGE_CHECK != '0' THEN 

/***********************************************************
CONDITION FOR CUSTOMER HAVING OUTAGE/STORM CONDITION
***********************************************************/
/*
V_OUT = select :ACCOUNT_NUMBER as "Account_Id",null as "Score",null as "Product_Id",'OUTAGE' as "Product_Name",null as "Regulated",  null as "Rank",'O' as "Owner_Renter_Header_Level",
                'O' as "Owner_Renter_Product_Level",'0' as  "Installation_Fee", now() as "DateTime" from dummy;
*/

CALL "CARE"."PKG_CARE.PKG_PROCEDURE::CARE_ACTIONS_PROC"(:ACCOUNT_NUMBER_ACN,:SYSTEM_SOURCE_CD,:ACCOUNT_ID,:CHANNEL_ID,:JURISDICTION_ID,:SOURCE_ACCOUNT_ID1,:SOURCE_ACCOUNT_ID2,V_ACN_OUTPUT);

V_OVERALL_ELIGIBLE = select :ACCOUNT_NUMBER as "ACCOUNT_NUMBER", :SYSTEM_SOURCE_CD as "SOURCE_SYSTEM_CD",'1' as "REGULATED",
                                                                                :OWNER_RENTER_HEADER_LEVEL as "OWNER_RENTER_HEADER_LEVEL", "Product_Id" as "PRODUCT_ID",'NA' as "COMMERCE_PRODUCT_ID",
                                                                                "Sub_Group_Name" as "PRODUCT_NAME",'NA' as  "PRODUCT_PRICE_INFORMATION",
                                                                                'NA' as "PRODUCT_HINTS_AND_REMINDERS","Owner_Renter_Product_Level" as "OWNER_RENTER_PRODUCT_LEVEL"
                                                                                , '1' as "SCORE",'NA' as "ACCEPT_REFERRED_FLAG","Line_Of_Business" as "LINE_OF_BUSINESS",
                                                                                'NA' as "INSTALLATION_FEE",'X' as "ELIGIBLE_FLAG",'1' as "RANK", null as "Upgrade_Downgrade_Flag" from :V_ELG a;
                                                                                
ELSE 
/********************************************************************************************************************************
CHECK IF CUSTOMER IS NEW
*********************************************************************************************************************************/

select CASE WHEN DAYS_BETWEEN("Account_Active_Dt",now()) > (
select "Config_Value_Double" from "CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_MODEL_CONFIGURATION"
where "Configuration_Name"= 'NEW_CUSTOMER_DAYS') 
THEN '0' ELSE '1' END  into CUSTOMER_NEW_ACCOUNT_FLAG from "CUSTOMER_DW"."Customer_Account" where "Account_Id" = :Account_ID;

if :CUSTOMER_NEW_ACCOUNT_FLAG != '0' THEN 

/************************************************
ELSE CONDITION FOR NEW CUSTOMERS
************************************************/
BEGIN
PARALLEL EXECUTION 

CALL "CARE"."PKG_CARE.PKG_PROCEDURE::CARE_ACTIONS_PROC"(:ACCOUNT_NUMBER_ACN,:SYSTEM_SOURCE_CD,:ACCOUNT_ID,:CHANNEL_ID,:JURISDICTION_ID,:SOURCE_ACCOUNT_ID1,:SOURCE_ACCOUNT_ID2,V_ACN_OUTPUT);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE::CARE_RT_CHECK_BRE_RULES_PROC"(:ACCOUNT_NUMBER_ACN,:SYSTEM_SOURCE_CD,:ACCOUNT_ID,V_REMOVE_PROD);

END;

V_OUT =  select :ACCOUNT_NUMBER as "ACCOUNT_NUMBER", :SYSTEM_SOURCE_CD as "SOURCE_SYSTEM_CD",a."Regulated" as "REGULATED","OWNER_RENTER_HEADER_LEVEL",
         a."Sub_Group_Id" as "PRODUCT_ID","Lookup_Value" as "COMMERCE_PRODUCT_ID",a."Sub_Group_Name" as "PRODUCT_NAME",
                                null as "PRODUCT_PRICE_INFORMATION",null as "PRODUCT_HINTS_AND_REMINDERS",a."Owner_Renter_Product_Level" as "OWNER_RENTER_PRODUCT_LEVEL"
          ,'1' as  "SCORE",null as "ACCEPT_REFERRED_FLAG",a."Line_Of_Business" as "LINE_OF_BUSINESS",null as "INSTALLATION_FEE",'O' as "ELIGIBLE_FLAG",
                                  RANK() OVER (Partition by "Regulated" ORDER BY b."Value" DESC) as  "RANK", null as "Upgrade_Downgrade_Flag" from 
                                  :ZCARE_MAP_PRODUCT  a
                                  INNER JOIN
                                  :V_ELG elg on a."Sub_Group_Id" = elg."Product_Id"
                                  LEFT OUTER JOIN
                                  :V_METRIC_VALUE b on a."Sub_Group_Id" = b."Group_Id"
                                  where a."New_Customer_Offering_Flag" = '1' and a."Sub_Group_Id" NOT IN (select "Product_Id" from :V_REMOVE_PROD)
								  											and a."Sub_Group_Id" NOT IN (select "Product_Id" 
																			from "CARE"."PKG_CARE.PKG_TABLES.PKG_ANALYTICAL_RECORD::ZCARE_PRED_PRODUCT_PARTICIPATION"
																			where "Account_Id" = :ACCOUNT_ID)
                                  and "Regulated"='1';
                                  
V_OVERALL_ELIGIBLE = select :ACCOUNT_NUMBER as "ACCOUNT_NUMBER", :SYSTEM_SOURCE_CD as "SOURCE_SYSTEM_CD",'1' as "REGULATED",
                                                                                :OWNER_RENTER_HEADER_LEVEL as "OWNER_RENTER_HEADER_LEVEL", "Product_Id" as "PRODUCT_ID",'NA' as "COMMERCE_PRODUCT_ID",
                                                                                "Sub_Group_Name" as "PRODUCT_NAME",'NA' as  "PRODUCT_PRICE_INFORMATION",
                                                                                'NA' as "PRODUCT_HINTS_AND_REMINDERS","Owner_Renter_Product_Level" as "OWNER_RENTER_PRODUCT_LEVEL"
                                                                                , '1' as "SCORE",'NA' as "ACCEPT_REFERRED_FLAG","Line_Of_Business" as "LINE_OF_BUSINESS",
                                                                                'NA' as "INSTALLATION_FEE",'X' as "ELIGIBLE_FLAG",'1' as "RANK", null as "Upgrade_Downgrade_Flag" from :V_ELG a ;
                                                                                
select '3' into DEFAULT_OFFERING_FLAG from dummy; 
 
ELSE 


BEGIN
PARALLEL EXECUTION 

CALL "CARE"."PKG_CARE.PKG_PROCEDURE::CARE_ACTIONS_PROC"(:ACCOUNT_NUMBER_ACN,:SYSTEM_SOURCE_CD,:ACCOUNT_ID,:CHANNEL_ID,:JURISDICTION_ID,:SOURCE_ACCOUNT_ID1,:SOURCE_ACCOUNT_ID2,V_ACN_OUTPUT);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE::CARE_RT_WEIGTAGE_PROC"(:ACCOUNT_NUMBER,:SYSTEM_SOURCE_CD,:ACCOUNT_ID,:SOURCE_ACCOUNT_ID1,:SOURCE_ACCOUNT_ID2,V_WEIGHTAGE_OUT);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE::CARE_RT_CHECK_BRE_RULES_PROC"(:ACCOUNT_NUMBER_ACN,:SYSTEM_SOURCE_CD,:ACCOUNT_ID,V_REMOVE_PROD);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE::CARE_RT_VTD_MP_PROC"(:JURISDICTION_ID,:CHANNEL_ID,V_MR_OUT);

END;

/********************************************************************************************
CHECK IF THERE IS ANY MASKING REQUIREMENT FROM BUSINESS
********************************************************************************************/


V_ADD_ATTR = select "Account_Id","Score" ,CASE WHEN "Sub_Group_Id" = '449' THEN :LED_NAME else  "Sub_Group_Name"  end  as "Product_Name","Regulated","Sub_Group_Id" as "Product_Id","Line_Of_Business",:JURISDICTION_ID as "Jurisdiction_Id" from :V_WEIGHTAGE_OUT a
        INNER JOIN
        :ZCARE_MAP_PRODUCT b
        ON a."Product_Id" = b."Sub_Group_Id" where "Regulated"='1';
        
       
select count(*) into Mask_Juris from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_JURIS';
select count(*) into Mask_LOB from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_LOB';
select count(*) into Mask_Product from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_PROD';

if :Mask_Juris > '0' and :Mask_LOB > '0' and :Mask_Product >'0'
THEN 

V_MASK_REQ = select a."Product_Id" from :V_ADD_ATTR  a
            INNER JOIN 
            (select "Attribute_Value" 
               from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_JURIS') b
            on a."Jurisdiction_Id" = b."Attribute_Value"
            INNER JOIN
            (select "Attribute_Value" 
               from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_LOB') c
            on a."Line_Of_Business" = c."Attribute_Value"
            INNER JOIN 
            (select "Attribute_Value" 
               from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_PROD') d
            on a."Product_Id" = d."Attribute_Value";
            
V_MASK = select "Account_Id","Score","Product_Name","Regulated","Product_Id" from :V_ADD_ATTR where "Product_Id" NOT IN (
            select "Product_Id" from :V_MASK_REQ) ;
            
              
ELSE 
IF :Mask_Juris > '0' and :Mask_LOB > '0' and :Mask_Product ='0'
THEN 
 V_MASK_REQ = select a."Product_Id" from :V_ADD_ATTR  a
            INNER JOIN 
            (select "Attribute_Value" 
               from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_JURIS') b
            on a."Jurisdiction_Id" = b."Attribute_Value"
            INNER JOIN
            (select "Attribute_Value" 
               from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_LOB') c
            on a."Line_Of_Business" = c."Attribute_Value";
            
V_MASK = select "Account_Id","Score","Product_Name","Regulated","Product_Id" from :V_ADD_ATTR where "Product_Id" NOT IN (
            select "Product_Id" from :V_MASK_REQ) ;
               
 ELSE 
                                                 IF :Mask_Juris > '0' and :Mask_LOB = '0' and :Mask_Product >'0'
                                                                                                THEN 
V_MASK_REQ = select a."Product_Id" from :V_ADD_ATTR  a
            INNER JOIN 
            (select "Attribute_Value" 
               from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_JURIS') b
            on a."Jurisdiction_Id" = b."Attribute_Value"
            INNER JOIN 
            (select "Attribute_Value" 
               from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_PROD') d
            on a."Product_Id" = d."Attribute_Value";
            
V_MASK = select "Account_Id","Score","Product_Name","Regulated","Product_Id" from :V_ADD_ATTR where "Product_Id" NOT IN (
            select "Product_Id" from :V_MASK_REQ) ;
ELSE
                                                IF :Mask_Juris = '0' and :Mask_LOB > '0' and :Mask_Product >'0' 
                                                                THEN 
V_MASK_REQ = select a."Product_Id" from :V_ADD_ATTR  a
            INNER JOIN 
            (select "Attribute_Value" 
               from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_LOB') c
            on a."Line_Of_Business" = c."Attribute_Value"
            INNER JOIN 
            (select "Attribute_Value" 
               from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_PROD') d
            on a."Product_Id" = d."Attribute_Value";
            
V_MASK = select "Account_Id","Score","Product_Name","Regulated","Product_Id" from :V_ADD_ATTR where "Product_Id" NOT IN (
            select "Product_Id" from :V_MASK_REQ) ;
                                                                              
                                                                ELSE IF :Mask_Juris = '0' and :Mask_LOB = '0' and :Mask_Product >'0' 
                                                                THEN 
 V_MASK_REQ = select a."Product_Id" from :V_ADD_ATTR  a
                INNER JOIN 
            (select "Attribute_Value" 
               from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_PROD') d
            on a."Product_Id" = d."Attribute_Value";
            
V_MASK = select "Account_Id","Score","Product_Name","Regulated","Product_Id" from :V_ADD_ATTR where "Product_Id" NOT IN (
            select "Product_Id" from :V_MASK_REQ) ;
                                                                              
                                                                ELSE IF :Mask_Juris > '0' and :Mask_LOB = '0' and :Mask_Product = '0'      
                                                                THEN 
 V_MASK_REQ = select a."Product_Id" from :V_ADD_ATTR  a
            INNER JOIN 
            (select "Attribute_Value" 
               from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_JURIS') b
            on a."Jurisdiction_Id" = b."Attribute_Value";
            
            
V_MASK = select "Account_Id","Score","Product_Name","Regulated","Product_Id" from :V_ADD_ATTR where "Product_Id" NOT IN (
            select "Product_Id" from :V_MASK_REQ) ;
                                                                              
                                                                ELSE IF :Mask_Juris = '0' and :Mask_LOB > '0' and :Mask_Product = '0'      
                                                                THEN 
 V_MASK_REQ = select a."Product_Id" from :V_ADD_ATTR  a
            INNER JOIN
            (select "Attribute_Value" 
               from "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPROD_OVERARCHING_RULES" where UPPER("Attribute_Name")='MASK_LOB') c
            on a."Line_Of_Business" = c."Attribute_Value";
            
V_MASK = select "Account_Id","Score","Product_Name","Regulated","Product_Id" from :V_ADD_ATTR where "Product_Id" NOT IN (
            select "Product_Id" from :V_MASK_REQ) ;
                                                                ELSE 
                V_MASK = select "Account_Id","Score","Product_Name","Regulated","Product_Id" from :V_ADD_ATTR;
                                                                                                                


END IF;
                END IF;
END IF;
END IF;                               
 END IF;
END IF;
END IF;

/****************************************************************************
CHECK PRODUCT ELIGIBILITY , PRODUCTS RELATED TO CHANNEL, MARKET PENETRATION VALUE 
******************************************************************************/

V_OUT_ELG = select a."Account_Id","Score","Product_Name","Regulated",a."Product_Id" from 
                    :V_MASK  a
                     INNER JOIN
                     :V_ELG b
                     on a."Account_Id" = b."Account_Id" and a."Product_Id" = b."Product_Id"
                     INNER JOIN 
                     :V_CHANNEL_JURIS c  on a."Product_Id" = c."Product_Id";

 V_OUT_MR =  select a."Account_Id",:JURISDICTION_ID as "Jurisdiction",
            "Score"*"Value"  as "Score", "Regulated","Product_Name",a."Product_Id"            
                     from :V_OUT_ELG a
                     LEFT OUTER JOIN 
                     :V_MR_OUT b
                     on a."Product_Id" = b."Product_Id";
                     
/*****************************************************
SET RANKING BASED ON BUSINESS REQUIREMENT (BRE SCREEN)
******************************************************/

V_RANK1 = select "Account_Id","Score", "Regulated","Product_Name",a."Product_Id","Rank"
              from :V_OUT_MR a
            LEFT OUTER JOIN 
            "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPRODUCT_RANK" b
            on a."Product_Id" = b."Product_Id" and a."Jurisdiction" = b."Jurisdiction_Id"
                                                where NOT EXISTS (select "Product_Id" from :V_REMOVE_PROD c where a."Product_Id" = c."Product_Id" );
                                                
                                                /*a."Product_Id" NOT IN (select "Product_Id" from :V_REMOVE_TIER_PRODUCT);*/
            
V_T_RANK_NO = select "Account_Id","Score", "Regulated","Product_Name","Product_Id","Rank" from :V_RANK1 where "Rank" is null;
V_T_RANK =  select "Account_Id","Score", "Regulated","Product_Name","Product_Id","Rank" from :V_RANK1 where "Rank" is not null;


BEGIN 

DECLARE RANK1 INTEGER Default 1;
DECLARE CHECKRANK INTEGER Default 1;
DECLARE COUNT10 INTEGER;
DECLARE V_ACCOUNT INTEGER ARRAY;
DECLARE V_SCORE DOUBLE ARRAY;
DECLARE V_REGULATED INTEGER ARRAY;
DECLARE V_PRODUCT_NAME NVARCHAR(1000) ARRAY;
DECLARE V_PRODUCT_ID INTEGER ARRAY;
DECLARE V_RANK INTEGER ARRAY;
DECLARE v_tab_car10 BIGINT ;
DECLARE l_v_indx10 INTEGER Default 1;
DECLARE l_v_iterate10 INTEGER Default 1;


tab10 = select "Account_Id","Score", "Regulated","Product_Name","Product_Id","Rank" from :V_T_RANK_NO order by "Rank" ASC,"Score" DESC;
select count(*) into COUNT10 from :V_RANK1;

V_ACCOUNT := ARRAY_AGG(:tab10."Account_Id" order by "Rank" ASC,"Score" DESC);
V_SCORE := ARRAY_AGG(:tab10."Score" order by "Rank" ASC,"Score" DESC);
V_REGULATED := ARRAY_AGG(:tab10."Regulated" order by "Rank" ASC,"Score" DESC);
V_PRODUCT_NAME := ARRAY_AGG(:tab10."Product_Name" order by "Rank" ASC,"Score" DESC);
V_PRODUCT_ID := ARRAY_AGG(:tab10."Product_Id" order by "Rank" ASC,"Score" DESC);
V_RANK := ARRAY_AGG(:tab10."Rank" order by "Rank" ASC,"Score" DESC);


v_tab_car10:= IFNULL(CARDINALITY(:V_ACCOUNT),0);
IF v_tab_car10 > 0 THEN

FOR l_v_indx10 IN l_v_iterate10..v_tab_car10                          
DO


               WHILE :CHECKRANK = '1' DO
                           select count(*) into CHECKRANK from :V_T_RANK where "Rank"=:RANK1;
                           if :CHECKRANK = '1' THEN 
                           RANK1 = :RANK1 + 1;                                                        
                           END IF;                           
               END WHILE;
       
V_RANK[:l_v_indx10] = :RANK1;
RANK1 = :RANK1 +1;
CHECKRANK = 1;


END FOR;

END IF;


v_tab10 = UNNEST ( :V_ACCOUNT, :V_SCORE,:V_REGULATED,:V_PRODUCT_NAME,:V_PRODUCT_ID,:V_RANK)
          as ("Account_Id","Score","Regulated","Product_Name","Product_Id","Rank");
          

  
END;
        
V_FINAL_RANK_1 = select * from :v_tab10
                           UNION
               select * from :V_T_RANK ORDER BY "Rank";
                           
select "Config_Value_Double" into LOW_PROB_SCORE_THRESHOLD from  "CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_MODEL_CONFIGURATION" 
            where "Configuration_Name" = 'LOW_PROB_SCORE_THRESHOLD';
            
select max("Score") into MAX_SCORE from :V_MASK;

/***********************************************
OFFER DEFAULT PRODUCTS IN CASE LOW SCORE
***********************************************/

If :MAX_SCORE < :LOW_PROB_SCORE_THRESHOLD

THEN 

CALL "CARE"."PKG_CARE.PKG_PROCEDURE::CARE_RT_CHECK_BRE_RULES_PROC"(:ACCOUNT_NUMBER_ACN,:SYSTEM_SOURCE_CD,:ACCOUNT_ID,V_REMOVE_PROD);

V_OUT =  select :ACCOUNT_NUMBER as "ACCOUNT_NUMBER", :SYSTEM_SOURCE_CD as "SOURCE_SYSTEM_CD",a."Regulated" as "REGULATED",
        :OWNER_RENTER_HEADER_LEVEL as "OWNER_RENTER_HEADER_LEVEL",
         a."Sub_Group_Id" as "PRODUCT_ID","Lookup_Value" as "COMMERCE_PRODUCT_ID",a."Sub_Group_Name" as "PRODUCT_NAME",
                                null as "PRODUCT_PRICE_INFORMATION",null as "PRODUCT_HINTS_AND_REMINDERS",a."Owner_Renter_Product_Level" as "OWNER_RENTER_PRODUCT_LEVEL"
          ,'1' as "SCORE",null as "ACCEPT_REFERRED_FLAG",a."Line_Of_Business"  as "LINE_OF_BUSINESS",null as "INSTALLATION_FEE",'O' as "ELIGIBLE_FLAG",
                                  RANK() OVER (Partition by "Regulated" ORDER BY b."Value" DESC) as  "RANK", null as "Upgrade_Downgrade_Flag" from 
                                  :ZCARE_MAP_PRODUCT  a
                                  INNER JOIN
                                  :V_ELG elg on a."Sub_Group_Id" = elg."Product_Id"
                                  LEFT OUTER JOIN
                                  :V_METRIC_VALUE b on a."Sub_Group_Id" = b."Group_Id"
                                   where a."Default_Program_Flag" = '1' and a."Sub_Group_Id" NOT IN (select "Product_Id" from :V_REMOVE_PROD)
								   								  		and a."Sub_Group_Id" NOT IN (select "Product_Id" 
																			from "CARE"."PKG_CARE.PKG_TABLES.PKG_ANALYTICAL_RECORD::ZCARE_PRED_PRODUCT_PARTICIPATION"
																			where "Account_Id" = :ACCOUNT_ID)
                                  and "Regulated"= 1;
                                  
V_OVERALL_ELIGIBLE = select :ACCOUNT_NUMBER as "ACCOUNT_NUMBER", :SYSTEM_SOURCE_CD as "SOURCE_SYSTEM_CD",'1' as "REGULATED",
                                                                                :OWNER_RENTER_HEADER_LEVEL as "OWNER_RENTER_HEADER_LEVEL", "Product_Id" as "PRODUCT_ID",'NA' as "COMMERCE_PRODUCT_ID",
                                                                                "Sub_Group_Name" as "PRODUCT_NAME",'NA' as  "PRODUCT_PRICE_INFORMATION",
                                                                                'NA' as "PRODUCT_HINTS_AND_REMINDERS","Owner_Renter_Product_Level" as "OWNER_RENTER_PRODUCT_LEVEL"
                                                                                , '1' as "SCORE",'NA' as "ACCEPT_REFERRED_FLAG","Line_Of_Business" as "LINE_OF_BUSINESS",
                                                                                'NA' as "INSTALLATION_FEE",'X' as "ELIGIBLE_FLAG",'1' as "RANK", null as "Upgrade_Downgrade_Flag" from :V_ELG a  ;
                                                                                
select '4' into DEFAULT_OFFERING_FLAG from dummy; 
                                  

                
ELSE 

V_OUT = select :ACCOUNT_NUMBER as "ACCOUNT_NUMBER", :SYSTEM_SOURCE_CD as "SOURCE_SYSTEM_CD",a."Regulated" as "REGULATED",
                                :OWNER_RENTER_HEADER_LEVEL as "OWNER_RENTER_HEADER_LEVEL","Product_Id" as "PRODUCT_ID","Lookup_Value" as "COMMERCE_PRODUCT_ID",a."Product_Name" as "PRODUCT_NAME",
                                'NA' as "PRODUCT_PRICE_INFORMATION",'NA' as "PRODUCT_HINTS_AND_REMINDERS",b."Owner_Renter_Product_Level" as "OWNER_RENTER_PRODUCT_LEVEL"
          ,"Score" as  "SCORE",'NA' as "ACCEPT_REFERRED_FLAG","Line_Of_Business" as "LINE_OF_BUSINESS",'NA' as "INSTALLATION_FEE",'O' as "ELIGIBLE_FLAG",
                                  RANK() OVER (Partition by a."Regulated" ORDER BY "Rank" ASC) as  "RANK", null as "Upgrade_Downgrade_Flag" from :V_FINAL_RANK_1 a
                                  LEFT OUTER JOIN 
                                  :ZCARE_MAP_PRODUCT b
                                  on a."Product_Id" = b."Sub_Group_Id"
                                  ;
                                  
V_OVERALL_ELIGIBLE = select :ACCOUNT_NUMBER as "ACCOUNT_NUMBER", :SYSTEM_SOURCE_CD as "SOURCE_SYSTEM_CD",'1' as "REGULATED",
                                                                                :OWNER_RENTER_HEADER_LEVEL as "OWNER_RENTER_HEADER_LEVEL", "Product_Id" as "PRODUCT_ID",'NA' as "COMMERCE_PRODUCT_ID",
                                                                                "Sub_Group_Name" as "PRODUCT_NAME",'NA' as  "PRODUCT_PRICE_INFORMATION",
                                                                                'NA' as "PRODUCT_HINTS_AND_REMINDERS","Owner_Renter_Product_Level" as "OWNER_RENTER_PRODUCT_LEVEL"
                                                                                , '1' as "SCORE",'NA' as "ACCEPT_REFERRED_FLAG","Line_Of_Business" as "LINE_OF_BUSINESS",
                                                                                'NA' as "INSTALLATION_FEE",'X' as "ELIGIBLE_FLAG",'1' as "RANK", null as "Upgrade_Downgrade_Flag" from :V_ELG a  
                                                                                ;
select '0' into DEFAULT_OFFERING_FLAG from dummy; 

END IF; 
END IF;
END IF;
END IF;
END IF;
END IF;                                                                                
/****************************************************************
RANK ACTIONS BASED ON BUSINESS RANKING
****************************************************************/

V_ACTIONS = select  :ACCOUNT_NUMBER as "ACCOUNT_NUMBER",
             "Action_Id" ,"Action_Description"
             from :V_ACN_OUTPUT;
                

V_RANK_ACN = select "ACCOUNT_NUMBER","Action_Description",a."Action_Id","Rank"
              from :V_ACTIONS a
            LEFT OUTER JOIN 
            "HANA_EE"."PKG_COMMON_MODEL.PKG_TABLE::ZPRODUCT_RANK" b
            on a."Action_Id" = b."Product_Id" 
                                                and   b."Jurisdiction_Id"= :JURISDICTION_ID ;
                                                
                                                /*a."Product_Id" NOT IN (select "Product_Id" from :V_REMOVE_TIER_PRODUCT);*/
                                                
         
V_T_RANK_NO_ACN = select "ACCOUNT_NUMBER","Action_Description","Action_Id","Rank" from :V_RANK_ACN where "Rank" is null;
V_T_RANK_ACN =  select "ACCOUNT_NUMBER","Action_Description","Action_Id","Rank" from :V_RANK_ACN where "Rank" is not null;

BEGIN 

DECLARE RANK_ACN INTEGER Default 1;
DECLARE CHECKRANK_ACN INTEGER Default 1;
DECLARE COUNT10 INTEGER;
DECLARE V_ACCOUNT_NUMBER BIGINT ARRAY;
DECLARE V_ACTION_NAME NVARCHAR(1000) ARRAY;
DECLARE V_ACTION_ID INTEGER ARRAY;
DECLARE V_RANK_ACTION INTEGER ARRAY;
DECLARE v_tab_acncar10 BIGINT ;
DECLARE l_v_acnindx10 INTEGER Default 1;
DECLARE l_v_acniterate10 INTEGER Default 1;


ACNtab10 = select "ACCOUNT_NUMBER","Action_Id" ,"Action_Description","Rank" from :V_T_RANK_NO_ACN order by "Rank" ASC,"Action_Id" ASC;
select count(*) into COUNT10 from :V_RANK_ACN;

V_ACCOUNT_NUMBER := ARRAY_AGG(:ACNtab10."ACCOUNT_NUMBER" order by "Rank" ASC,"Action_Id" ASC);
V_ACTION_NAME := ARRAY_AGG(:ACNtab10."Action_Description" order by "Rank" ASC,"Action_Id" ASC);
V_ACTION_ID := ARRAY_AGG(:ACNtab10."Action_Id" order by "Rank" ASC,"Action_Id" ASC);
V_RANK_ACTION := ARRAY_AGG(:ACNtab10."Rank" order by "Rank" ASC,"Action_Id" ASC);


v_tab_acncar10:= IFNULL(CARDINALITY(:V_ACCOUNT_NUMBER),0);
IF v_tab_acncar10 > 0 THEN

FOR l_v_acnindx10 IN l_v_acniterate10..v_tab_acncar10                          
DO


               WHILE :CHECKRANK_ACN = '1' DO
                           select count(*) into CHECKRANK_ACN from :V_T_RANK where "Rank"=:RANK_ACN;
                           if :CHECKRANK_ACN = '1' THEN 
                           RANK_ACN = :RANK_ACN + 1;                                                        
                           END IF;                           
               END WHILE;
       
V_RANK_ACTION[:l_v_acnindx10] = :RANK_ACN;
RANK_ACN = :RANK_ACN +1;
CHECKRANK_ACN = 1;


END FOR;

END IF;


v_tab10_acn = UNNEST ( :V_ACCOUNT_NUMBER,:V_ACTION_NAME,:V_ACTION_ID,:V_RANK_ACTION)
          as ("ACCOUNT_NUMBER","Action_Description","Action_Id","Rank");
          

  
END;

V_ACTIONS_FINAL =  select  :ACCOUNT_NUMBER as "ACCOUNT_NUMBER", :SYSTEM_SOURCE_CD as "SOURCE_SYSTEM_CD",'1' as "REGULATED",
                                                                                CASE WHEN :OWNER_RENTER_HEADER_LEVEL is null THEN 'O' ELSE :OWNER_RENTER_HEADER_LEVEL end as "OWNER_RENTER_HEADER_LEVEL",
                                                                                "Action_Id" as "PRODUCT_ID",'NA' as "COMMERCE_PRODUCT_ID","Action_Description" as "PRODUCT_NAME",
                                                                                '' as "PRODUCT_PRICE_INFORMATION",'' as "PRODUCT_HINTS_AND_REMINDERS", '' as "OWNER_RENTER_PRODUCT_LEVEL",
                                                                                '1' as "SCORE",'' as "ACCEPT_REFERRED_FLAG",'' as "LINE_OF_BUSINESS",
                '' as  "INSTALLATION_FEE" ,'A' as "ELIGIBLE_FLAG",rank() over (order by "Rank" ASC) as "RANK" from :v_tab10_acn;
                
 select max("RANK") into MAX_ACTION_RANK from :V_ACTIONS_FINAL;

END IF;

IF :ACCOUNT_NUMBER_ACN = '' and  :JURISDICTION_NAME_CRM = 'DEMW'
THEN 

V_OUT_OFR = select "ACCOUNT_NUMBER",  "SOURCE_SYSTEM_CD", "REGULATED",
                                "OWNER_RENTER_HEADER_LEVEL","PRODUCT_ID", "COMMERCE_PRODUCT_ID","PRODUCT_NAME",
                                "PRODUCT_PRICE_INFORMATION","PRODUCT_HINTS_AND_REMINDERS","OWNER_RENTER_PRODUCT_LEVEL"
          , "SCORE","ACCEPT_REFERRED_FLAG","LINE_OF_BUSINESS","INSTALLATION_FEE","ELIGIBLE_FLAG", "RANK", null as "Upgrade_Downgrade_Flag",
          null as "Product_Family_Name" from :V_OUT where '1' = '2'
          UNION 
          select "ACCOUNT_NUMBER",  "SOURCE_SYSTEM_CD", "REGULATED",
                                "OWNER_RENTER_HEADER_LEVEL","PRODUCT_ID", "COMMERCE_PRODUCT_ID","PRODUCT_NAME",
                                "PRODUCT_PRICE_INFORMATION","PRODUCT_HINTS_AND_REMINDERS","OWNER_RENTER_PRODUCT_LEVEL"
          , '1' as "SCORE","ACCEPT_REFERRED_FLAG","LINE_OF_BUSINESS","INSTALLATION_FEE",'X' as "ELIGIBLE_FLAG", '1' as "RANK", null as "Upgrade_Downgrade_Flag",
          null as "Product_Family_Name" from :V_OUT where '1' = '2';

ELSE 

IF :ACCOUNT_NUMBER_ACN = '' 
THEN 

V_OUT_OFR = select "ACCOUNT_NUMBER",  "SOURCE_SYSTEM_CD", "REGULATED",
                                "OWNER_RENTER_HEADER_LEVEL","PRODUCT_ID", "COMMERCE_PRODUCT_ID","PRODUCT_NAME",
                                "PRODUCT_PRICE_INFORMATION","PRODUCT_HINTS_AND_REMINDERS","OWNER_RENTER_PRODUCT_LEVEL"
          , "SCORE","ACCEPT_REFERRED_FLAG","LINE_OF_BUSINESS","INSTALLATION_FEE","ELIGIBLE_FLAG", "RANK", null as "Upgrade_Downgrade_Flag",
          null as "Product_Family_Name" from :V_OUT 
          UNION 
          select "ACCOUNT_NUMBER",  "SOURCE_SYSTEM_CD", "REGULATED",
                                "OWNER_RENTER_HEADER_LEVEL","PRODUCT_ID", "COMMERCE_PRODUCT_ID","PRODUCT_NAME",
                                "PRODUCT_PRICE_INFORMATION","PRODUCT_HINTS_AND_REMINDERS","OWNER_RENTER_PRODUCT_LEVEL"
          , '1' as "SCORE","ACCEPT_REFERRED_FLAG","LINE_OF_BUSINESS","INSTALLATION_FEE",'X' as "ELIGIBLE_FLAG", '1' as "RANK", null as "Upgrade_Downgrade_Flag",
          null as "Product_Family_Name" from :V_OUT;

ELSE 
                                 
                                 
IF :OUTAGE_CHECK != 0 THEN 
                                  
V_OUT_OFR1 = select a.*, null as "Upgrade_Downgrade_Flag" from :V_ACTIONS_FINAL a
                                                UNION 
            select * from :V_OVERALL_ELIGIBLE;
            
V_OUT_OFR = select *,null as "Product_Family_Name"  from :V_OUT_OFR1;
                                                
ELSE
IF :V_NON_RES_CHECK > 0 OR :V_INACTIVE_CHECK > 0 THEN 

V_OUT_OFR1 = select * from :V_OUT  where '1' = '2'
            UNION
            select * from :V_OVERALL_ELIGIBLE where '1' = '2';
            
V_OUT_OFR = select *,null as "Product_Family_Name"  from :V_OUT_OFR1;

ELSE

if :JURISDICTION_NAME_CRM = 'DEMW' and :DEFAULT_OFFERING_FLAG = 1 
THEN 

V_OUT_OFR1 = select * from :V_OUT  where '1' = '2'
            UNION
            select * from :V_OVERALL_ELIGIBLE where '1' = '2';
            
V_OUT_OFR = select *,null as "Product_Family_Name"  from :V_OUT_OFR1;

ELSE 

IF :check_id_anr != 0  THEN 

V_OUT_OFR = select a.*,  null as "Upgrade_Downgrade_Flag", null as "Product_Family_Name" from :V_ACTIONS_FINAL a
                                                UNION 
                                                select "ACCOUNT_NUMBER",  "SOURCE_SYSTEM_CD", "REGULATED",
                                "OWNER_RENTER_HEADER_LEVEL","PRODUCT_ID", "COMMERCE_PRODUCT_ID","PRODUCT_NAME",
                                "PRODUCT_PRICE_INFORMATION","PRODUCT_HINTS_AND_REMINDERS","OWNER_RENTER_PRODUCT_LEVEL"
          , "SCORE","ACCEPT_REFERRED_FLAG","LINE_OF_BUSINESS","INSTALLATION_FEE","ELIGIBLE_FLAG",
                                  "RANK" + CASE WHEN :MAX_ACTION_RANK is null THEN '0' ELSE :MAX_ACTION_RANK end as  "RANK", null as "Upgrade_Downgrade_Flag",
                                  null as "Product_Family_Name" from  :V_OUT
                                                UNION 
                                                select *, null as "Product_Family_Name" from :V_OVERALL_ELIGIBLE;
                                                
ELSE 



V_OUT_OFR1 = select * from :V_OUT
            UNION
            select * from :V_OVERALL_ELIGIBLE; 
 
 V_OUT_OFR = select *,null as "Product_Family_Name"  from :V_OUT_OFR1;
            
END IF;
                                                
END IF;
END IF;
END IF;
END IF;
END IF;

                                                
INSERT INTO "CARE"."PKG_CARE.PKG_TABLES.PKG_MODEL_OUTPUT::ZCARE_PREDICTION_RT_OUTPUT"
(select "ACCOUNT_NUMBER", "SOURCE_SYSTEM_CD","PRODUCT_ID","PRODUCT_NAME","REGULATED","SCORE","RANK",
:CHANNEL_NAME as "CHANNEL", :DEFAULT_OFFERING_FLAG as "DEFAULT_OFFERING_FLAG", now() as "DateTime" from :V_OUT_OFR );


       
END; 