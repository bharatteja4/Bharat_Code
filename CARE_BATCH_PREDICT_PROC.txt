PROCEDURE "CARE"."PKG_CARE.PKG_PROCEDURE::CARE_BATCH_PREDICT_PROC" ( )
   LANGUAGE SQLSCRIPT
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
DECLARE V_MAX_TIME_IVR TIMESTAMP;
DECLARE COUNT_AFTER_FINAL_RANK INTEGER;
DECLARE CHANNEL_ID INTEGER;
DECLARE OWNER_RENTER_HEADER_LEVEL NVARCHAR(2);
DECLARE check_anr INTEGER;
DECLARE V_GA_MAX_TIME TIMESTAMP;
DECLARE count_ocb INTEGER;
DECLARE OUTAGE_CHECK INTEGER;
DECLARE Total_Sum_GAIVR INTEGER;
DECLARE CHECK_LOG_RECOM INTEGER;
DECLARE mask_juris INTEGER;
DECLARE mask_LOB INTEGER;
DECLARE mask_product INTEGER; 
DECLARE MAX_LR_TIME TIMESTAMP;
DECLARE JURISDICTION NVARCHAR(10);
DECLARE JURISDICTION_ID INTEGER;
DECLARE LOW_PROB_SCORE_THRESHOLD DOUBLE;
DECLARE CHECK_GAIVR INTEGER;
DECLARE MAX_SCORE DOUBLE;
DECLARE ACCOUNT_ID INTEGER;
DECLARE CUSTOMER_NEW_ACCOUNT_FLAG INTEGER;
DECLARE V_PREDICT394 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT426 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT880 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT396 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT806 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT448 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT445 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT443 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT446 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT444 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT399 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT456 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT808 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT810 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT392 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT395 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT459 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_PREDICT432 TABLE ("Account_Id" INTEGER, "SCORE" NVARCHAR(100) , "CONFIDENCE" DOUBLE );
DECLARE V_OUTPUT_LOG394WUC TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG426WUC TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG880WUC TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG806WUC TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG396 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG448 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG445 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG443 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG446 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG444 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG399 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG456 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG808 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG810 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG392 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG395 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG459 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE V_OUTPUT_LOG432 TABLE ("Account_Id" INTEGER, "SCORE" DOUBLE , "CLASS" VARCHAR(1));
DECLARE PREDICTION_ANR_COUNT INTEGER;
DECLARE LED_CHECK INTEGER;
DECLARE TRAINING_MODEL NVARCHAR(1);
DECLARE MAX_ACTION_RANK INTEGER;
DECLARE DEFAULT_OFFERING_FLAG INTEGER;


V_PREDICTION_ANR = select "Account_Id","Account_Number","Source_System_Cd","Owner_Renter_DW",
"Jurisdiction_Id","Adult_Age","Length_of_Residence","Buying_Channel_Preferences_Propensity_Internet_9999",
"Buying_Channel_Preferences_Propensity_Mail_9999","Buying_Channel_Preferences_Propensity_Phone_9999",
"Mean_Buying_Channel_Preferences_Propensity_Phone","Mean_Buying_Channel_Preferences_Propensity_Mail",
"Media_Channel_Usage_Internet_9999","Media_Channel_Usage_Cell_Phone_9999","Media_Channel_Usage_Primetime_TV_9999",
"Media_Channel_Usage_Daytime_TV_9999","Media_Channel_Usage_Outdoor_9999","Mean_Media_Channel_Usage_Primetime_TV",
"Media_Channel_Usage_Radio_9999","Media_Channel_Usage_Magazine_9999","Media_Channel_Usage_Newspaper_9999",
"Mean_Media_Channel_Usage_Internet","Mean_Media_Channel_Usage_Daytime_TV","Mean_Media_Channel_Usage_Cell_Phone",
"Mean_Media_Channel_Usage_Magazine","Mean_Media_Channel_Usage_Newspaper","Mean_Media_Channel_Usage_Outdoor",
"Mean_Media_Channel_Usage_Radio","Energy_Consumer_Dynamics_Comfort_Consumption_Score",
"Mean_Buying_Channel_Preferences_Propensity_Internet","Energy_Consumer_Dynamics_Affordability_Level_Score",
"Energy_Consumer_Dynamics_Green_Affinity_Score","Energy_Consumer_Dynamics_Info_Action_Orientation_Score",
"Energy_Consumer_Dynamics_Investment_Capacity_Score","Energy_Consumer_Dynamics_Technology_Propensity_Score",
"Jurisdiction","Heat_Source","Smart_Meter","Home_Square_Footage","Household_Size","OLS_Email_Indicator",
"Population_Density","Adult_Number_in_Household","Lot_Square_Footage_Range","Owner_Renter","Home_Property_Type",
"Year_Built","Dwelling_Type","Lot_Square_Footage","AMI_Meter","Rej448","Rej445","Rej443","Rej446","Rej444",
"Rej399","Rej456","Rej808","Rej810","Rej392","Rej395","Rej394","Rej426","Rej880","Rej396","Rej806","Rej459",
"Latest_flag_448","Latest_flag_445","Latest_flag_443","Latest_flag_446","Latest_flag_444","Latest_flag_399",
"Latest_flag_456","Latest_flag_808","Latest_flag_810","Latest_flag_392","Latest_flag_395","Latest_flag_394",
"Latest_flag_426","Latest_flag_880","Latest_flag_396","Latest_flag_806","Latest_flag_459","Charges_3months_448",
"Charges_6months_448","Charges_9months_448","Charges_12months_448","Charges_3months_445","Charges_6months_445",
"Charges_9months_445","Charges_12months_445","Charges_3months_443","Charges_6months_443","Charges_9months_443",
"Charges_12months_443","Charges_3months_446","Charges_6months_446","Charges_9months_446","Charges_12months_446",
"Charges_3months_444","Charges_6months_444","Charges_9months_444","Charges_12months_444","Charges_3months_399",
"Charges_6months_399","Charges_9months_399","Charges_12months_399","Charges_3months_456","Charges_6months_456",
"Charges_9months_456","Charges_12months_456","Charges_3months_808","Charges_6months_808","Charges_9months_808",
"Charges_12months_808","Charges_3months_810","Charges_6months_810","Charges_9months_810","Charges_12months_810",
"Charges_3months_392","Charges_6months_392","Charges_9months_392","Charges_12months_392","Charges_3months_395",
"Charges_6months_395","Charges_9months_395","Charges_12months_395","Charges_3months_459","Charges_6months_459",
"Charges_9months_459","Charges_12months_459","Charges_3months_806","Charges_6months_806","Charges_9months_806",
"Charges_12months_806","Charges_3months_394","Charges_6months_394","Charges_9months_394","Charges_12months_394",
"Charges_3months_880","Charges_6months_880","Charges_9months_880","Charges_12months_880","Charges_3months_426",
"Charges_6months_426","Charges_9months_426","Charges_12months_426","Charges_3months_396","Charges_6months_396",
"Charges_9months_396","Charges_12months_396","Late_Payment_12_444","Late_Payment_12_445","Late_Payment_12_446",
"Late_Payment_12_808","Late_Payment_3_444","Late_Payment_3_445","Late_Payment_3_446","Late_Payment_3_808",
"Participation_Month_448","Participation_Month_445","Participation_Month_443","Participation_Month_446",
"Participation_Month_444","Participation_Month_399","Participation_Month_456","Participation_Month_808",
"Participation_Month_392","Participation_Month_395","Participation_Month_810","Participation_Month_394",
"Participation_Month_426","Participation_Month_880","Participation_Month_396","Participation_Month_806",
"Participation_Month_459","Charge_Variance_448","Charge_Variance_445","Charge_Variance_443","Charge_Variance_446",
"Charge_Variance_444","Charge_Variance_399","Charge_Variance_456","Charge_Variance_808","Charge_Variance_392",
"Charge_Variance_395","Charge_Variance_810","Charge_Variance_394","Charge_Variance_426","Charge_Variance_880",
"Charge_Variance_396","Charge_Variance_806","Charge_Variance_459","g448","g445","g443","g446","g444","g399",
"g456","g808","g810","g392","g395","g394","g426","g880","g396","g806","g459","Jurisdiction_Name"
"g432","Participation_Month_432","Rej432","Latest_flag_432"
 from "CARE"."PKG_CARE.PKG_TABLES.PKG_ANALYTICAL_RECORD::ZCARE_PREDICTION_ANALYTICAL_RECORD";

 select "Config_Value_String" into TRAINING_MODEL from "CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_MODEL_CONFIGURATION" where 
"Configuration_Name"='CARE_GRAD_BOOSTING_TRAINING';

if :TRAINING_MODEL = 'Y' THEN  

CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_392"(V_PREDICT392);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_394"(V_PREDICT394);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_395"(V_PREDICT395);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_396"(V_PREDICT396);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_399"(V_PREDICT399);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_426"(V_PREDICT426);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_443"(V_PREDICT443);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_444"(V_PREDICT444);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_445"(V_PREDICT445);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_446"(V_PREDICT446);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_448"(V_PREDICT448);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_456"(V_PREDICT456);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_459"(V_PREDICT459);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_806"(V_PREDICT806);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_808"(V_PREDICT808);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_810"(V_PREDICT810);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_880"(V_PREDICT880);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_GB_SCORING_432"(V_PREDICT432);


V_PREDICTION_OVERALL = select * , 394 as "Product_Id" from :V_PREDICT394

                                               
                            UNION
                         select *, 426 as "Product_Id" from :V_PREDICT426
                         
                          UNION
                        select *, 880 as "Product_Id" from :V_PREDICT880
                        
                          UNION
                        select *, 396 as "Product_Id"from :V_PREDICT396
                        
                         UNION
                        select * , 806 as "Product_Id" from :V_PREDICT806
                        UNION
                        
                        select *, 448 as "Product_Id" from :V_PREDICT448
                        UNION
                        select *, 445 as "Product_Id" from :V_PREDICT445
                        UNION
                        select *, 443 as "Product_Id" from :V_PREDICT443
                        UNION
                        select * , 446 as "Product_Id" from :V_PREDICT446
                        UNION
                        select * , 444 as "Product_Id" from :V_PREDICT444
                        UNION
                        select * , 399 as "Product_Id" from :V_PREDICT399
                       
                       
                       UNION
                        select * , 456 as "Product_Id" from :V_PREDICT456
                       
                       UNION
                        select * , 808 as "Product_Id" from :V_PREDICT808 
                        
                        UNION
                        select * , 810 as "Product_Id" from :V_PREDICT810
                       
                       UNION                             
                        select * , 392 as "Product_Id" from :V_PREDICT392
                        UNION
                        select * , 395 as "Product_Id" from :V_PREDICT395  
                       
                        UNION
                        select * , 459 as "Product_Id" from :V_PREDICT459
                        
                        UNION
                        select * , 432 as "Product_Id" from :V_PREDICT432;


ELSE 


CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_392"(V_OUTPUT_LOG392);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_394WUC"(V_OUTPUT_LOG394WUC);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_395"(V_OUTPUT_LOG395);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_396"(V_OUTPUT_LOG396);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_399"(V_OUTPUT_LOG399);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_426WUC"(V_OUTPUT_LOG426WUC);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_443"(V_OUTPUT_LOG443);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_444"( V_OUTPUT_LOG444);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_445"( V_OUTPUT_LOG445);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_446"( V_OUTPUT_LOG446);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_448"( V_OUTPUT_LOG448);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_456"( V_OUTPUT_LOG456);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_459"( V_OUTPUT_LOG459);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_806WUC"( V_OUTPUT_LOG806WUC);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_808"( V_OUTPUT_LOG808);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_810"( V_OUTPUT_LOG810);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_880WUC" (V_OUTPUT_LOG880WUC);
CALL "CARE"."PKG_CARE.PKG_PROCEDURE.PKG_PREDICTION::ZCARE_LR_SCORING_432" (V_OUTPUT_LOG432);

V_PREDICTION_OVERALL = select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" , 395 as "Product_Id" from :V_OUTPUT_LOG395

                                               
                            UNION
                         select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" , 392 as "Product_Id" from :V_OUTPUT_LOG392
                         
                          UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" , 396 as "Product_Id" from :V_OUTPUT_LOG396
                        
                          UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" , 399 as "Product_Id"from :V_OUTPUT_LOG399
                        
                         UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" , 443 as "Product_Id" from :V_OUTPUT_LOG443
                        UNION
                        
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" ,  444 as "Product_Id" from :V_OUTPUT_LOG444
                        UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" ,  445 as "Product_Id" from :V_OUTPUT_LOG445
                        UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" ,  448 as "Product_Id" from :V_OUTPUT_LOG448
                        UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" ,  446 as "Product_Id" from :V_OUTPUT_LOG446
                        UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" ,  456 as "Product_Id" from :V_OUTPUT_LOG456
                        UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" ,  459 as "Product_Id" from :V_OUTPUT_LOG459
                       
                       
                       UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" ,  808 as "Product_Id" from :V_OUTPUT_LOG808
                       
                       UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" ,  810 as "Product_Id" from :V_OUTPUT_LOG810
                        
                        UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" ,  394 as "Product_Id" from :V_OUTPUT_LOG394WUC
                       
                       UNION                             
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" ,  426 as "Product_Id" from :V_OUTPUT_LOG426WUC
                        UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" ,  806 as "Product_Id" from :V_OUTPUT_LOG806WUC  
                       
                        UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" ,  880 as "Product_Id" from :V_OUTPUT_LOG880WUC
                        UNION
                        select "Account_Id", "CLASS" as "SCORE", "SCORE" as "CONFIDENCE" ,  432 as "Product_Id" from :V_OUTPUT_LOG432;


END IF;
 

V_SUB_PRODUCTS = select "Account_Id","CONFIDENCE" as "Score","Sub_Group_Id" as "Product_Id" ,"Sub_Group_Name" as "Product_Name"
                        from :V_PREDICTION_OVERALL a
                        INNER JOIN
                        "CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_MAP_PRODUCT" b on a."Product_Id" = b."Group_Id";

TRUNCATE TABLE "CARE"."PKG_CARE.PKG_TABLES.PKG_MODEL_OUTPUT::ZCARE_PREDICTION_BT_OUTPUT";
INSERT INTO "CARE"."PKG_CARE.PKG_TABLES.PKG_MODEL_OUTPUT::ZCARE_PREDICTION_BT_OUTPUT" (select "Account_Id","Product_Id","Product_Name","Score" 
from :V_SUB_PRODUCTS);

/*
/*********************************************
CHECK FOR HIGH BILL OR HIGH USAGE ALERT NOTIFICATION TO CUSTOMER
**********************************************/
/*

V_COUNT_OCB = select "Account_Id","Account_Number", sum("OCB_COUNT") as "OCB_COUNT" from (
                select distinct "Account_Id","Account_Number", 1 as "OCB_COUNT" from :V_PREDICTION_ANR a
              INNER JOIN
              (select "SRC_ACCT_ID","SRC_ACCT_ID2" from "OCB"."COMMUNICATION_EVENT"
            where UPPER("SRC_COMMUN_REQ_SYS_CD") IN (select "Config_Value_String"  from 
            "CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_MODEL_CONFIGURATION" where "Configuration_Name"='OCB_HIGH_BILL_STRING')) b
            on "SRC_ACCT_ID" || ifnull("SRC_ACCT_ID2",'')  = CAST(a."Account_Number" as NVARCHAR(12))) GROUP BY "Account_Id","Account_Number";


V_OCB_FINAL = select a."Account_Id","Product_Id","Account_Number","Product_Name",
             CASE WHEN c."OCB_COUNT" is not null and b."OCB_Flag"='1' THEN "Score"* POWER(2.718,c."OCB_COUNT"*
             (select "Config_Value_Double"  from 
				"CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_MODEL_CONFIGURATION" where "Configuration_Name"='OCB_HIGH_BILL_RATIO')   
            ) ELSE "Score" end as "Score"
              from :V_SUB_PRODUCTS a
              LEFT OUTER JOIN
              (select "Sub_Group_Id" ,"OCB_Flag"
				from "CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_MAP_PRODUCT" where "OCB_Flag"='1') b
			 on a."Product_Id" = b."Sub_Group_Id"
			 LEFT OUTER JOIN
			 :V_COUNT_OCB c on c."Account_Id" = a."Account_Id";
              
 
 /******************************************************
CHECK FOR  OUTAGE NOTIFICATION TO CUSTOMER
******************************************************/
/*
V_OUTAGE_COUNT = select "SRC_ACCT_ID" || ifnull("SRC_ACCT_ID2",'') as "Account_Number", count("OMS_EVT_TS") as "count_outage" from  "OCB"."OUTAGE_EVENT_NOTIFICATION"
                 GROUP BY   "SRC_ACCT_ID" || ifnull("SRC_ACCT_ID2",'')  ;
                 
                
 V_OUTAGE_FINAL = select a."Account_Id", "Product_Id","Product_Name",
                CASE WHEN "Outage_Flag"= 1 and c."count_outage" is not null then "Score"* POWER(2.718, c."count_outage"*
                (select "Config_Value_Double"  from 
				"CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_MODEL_CONFIGURATION" where "Configuration_Name"='OCB_OUTAGE_RATIO'))
				ELSE "Score"
				END as "Score"
                 from :V_OCB_FINAL a
                 LEFT OUTER JOIN 
                 (select "Sub_Group_Id" ,"Outage_Flag"
				from "CARE"."PKG_CARE.PKG_TABLES.PKG_CONFIGURATION::ZCARE_MAP_PRODUCT" where "Outage_Flag"='1') b
				on a."Product_Id"= b."Sub_Group_Id"
				LEFT OUTER JOIN 
				:V_OUTAGE_COUNT c on a."Account_Number" = c."Account_Number";
				
				
/*********************************************************************
Google Analytics and IVR  Weightage
*********************************************************************/
/*
V_IVR = select "Account_Id", "CUST_MENU_SELECTION_CD" as "Menu_Visited" from 
"IVR"."IVR_CALL_ST_ACTY_FACT_STG" where  "CREATE_TS" > ADD_DAYS(now(),'-15');

V_IVR_COUNT =   select "Account_Id","Product_Id",a."Menu_Visited" as "Visited" from 
                :V_IVR a
                INNER JOIN 
                "IVR"."PKG_COMMON_MODEL.PKG_TABLE::ZIVR_MAP_MENUVISIT" b on a."Menu_Visited"= b."Menu_Visited";
                
V_GA = select "Account_Id","Page_Visited","DateTime" from "GOOGLE_ANALYTICS"."PKG_COMMON_MODEL.PKG_TABLE::ZGOOGLE_ANALYTICS_STG" 
            where "DateTime" > ADD_DAYS(now(),'-15');

V_GA_COUNT =  select "Account_Id","Product_Id",a."Page_Visited" as "Visited" from 
                :V_GA a
                INNER JOIN 
                "GOOGLE_ANALYTICS"."PKG_COMMON_MODEL.PKG_TABLE::ZGA_MAP_PAGEVISIT" b on a."Page_Visited"= b."Page_Visited";
                

V_IVR_GA_PRODUCT_COUNT =  select "Account_Id","Product_Id",count("Visited") as "GAIVR_COUNT" from (
                        select "Account_Id","Product_Id","Visited" from :V_IVR_COUNT
                        UNION ALL
                        select "Account_Id","Product_Id","Visited" from :V_GA_COUNT) GROUP BY "Account_Id","Product_Id";
                        
V_IVR_GA_OVERALL_COUNT = select "Account_Id",sum("GAIVR_COUNT") as "Overall_GAIVRCOUNT"  from :V_IVR_GA_PRODUCT_COUNT   GROUP BY "Account_Id";               
                        
V_ADD_GA_IVR_WEIGHT = select a."Account_Id",a."Product_Id", "Product_Name",
                        "Score" + "Score"* CASE WHEN "Overall_GAIVRCOUNT" is null or "GAIVR_COUNT" is null  THEN 0 ELSE 
                        "GAIVR_COUNT"/"Overall_GAIVRCOUNT" END as "Score" from :V_OUTAGE_FINAL a
                        LEFT OUTER JOIN
                        :V_IVR_GA_PRODUCT_COUNT b on a."Account_Id"= b."Account_Id" and a."Product_Id" = b."Product_Id"
                        LEFT OUTER JOIN
                        :V_IVR_GA_OVERALL_COUNT c on a."Account_Id"= c."Account_Id"; 
                        
TRUNCATE TABLE "CARE"."PKG_CARE.PKG_TABLES.PKG_MODEL_OUTPUT::ZCARE_PREDICTION_MKT_BT_OUTPUT";
INSERT INTO "CARE"."PKG_CARE.PKG_TABLES.PKG_MODEL_OUTPUT::ZCARE_PREDICTION_MKT_BT_OUTPUT" (select "Account_Id","Product_Id","Product_Name","Score" 
from :V_ADD_GA_IVR_WEIGHT);

*/

insert into "CARE"."PKG_CARE.PKG_SCHEDULE::ZCARE_JOB_STATUS" values('CARE_BATCH_PREDICT_PROC','SUCCESS',now());

END
;
